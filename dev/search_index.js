var documenterSearchIndex = {"docs":
[{"location":"#CloudQSim.jl","page":"CloudQSim.jl","title":"CloudQSim.jl","text":"","category":"section"},{"location":"","page":"CloudQSim.jl","title":"CloudQSim.jl","text":"Documentation for CloudQSim.jl will be here soon. Meanwhile, out the github repo.","category":"page"},{"location":"","page":"CloudQSim.jl","title":"CloudQSim.jl","text":"CloudQSim","category":"page"},{"location":"#CloudQSim","page":"CloudQSim.jl","title":"CloudQSim","text":"Cloud simulation of quantum evolution using Bloqade.jl\n\n\n\n\n\n","category":"module"},{"location":"#Module-Index","page":"CloudQSim.jl","title":"Module Index","text":"","category":"section"},{"location":"","page":"CloudQSim.jl","title":"CloudQSim.jl","text":"Modules = [CloudQSim]\nOrder   = [:constant, :type, :function, :macro]","category":"page"},{"location":"#Detailed-API","page":"CloudQSim.jl","title":"Detailed API","text":"","category":"section"},{"location":"","page":"CloudQSim.jl","title":"CloudQSim.jl","text":"Modules = [CloudQSim]\nOrder   = [:constant, :type, :function, :macro]","category":"page"},{"location":"#CloudQSim.CloudConfig","page":"CloudQSim.jl","title":"CloudQSim.CloudConfig","text":"Configuration for cloud simulation servers.\n\nFields\n\naddrs: Hosts to connect to\nports: Ports to use \nworker_counts: Number of workers on each server to use in load balancing\n\nExample\n\njulia> clconf = CloudConfig()\njulia> add_server!(clconf, \"cloudqs.lykov.tech\", 7700)\n\n\n\n\n\n","category":"type"},{"location":"#CloudQSim.CloudQSimTask","page":"CloudQSim.jl","title":"CloudQSim.CloudQSimTask","text":"Simple wrapper for cloud server task\n\n\n\n\n\n","category":"type"},{"location":"#CloudQSim.cloud_simulate-Tuple{AbstractVector, Int64, Vector{<:Vector}, CloudConfig}","page":"CloudQSim.jl","title":"CloudQSim.cloud_simulate","text":"Run quantum evolution of multiple Hamiltonians in the cloud.\n\nArguments\n\nhamiltonian::Vector: List of Hamiltonians\ntime_points::Int: How many evaluations of observables to do   throughout the simulation\nobservables::Vector{<:Vector}: List of observables to evaluate\nsubspace_radius::Float64=0.: Radius of the subspace to use for   the Bloqade subspace evolution\n\nReturns\n\nresults::Array: Array of results, with dimensions   (hamiltonians, time_points, observables)\n\n\n\n\n\n","category":"method"},{"location":"#CloudQSim.get_last_meta-Tuple{}","page":"CloudQSim.jl","title":"CloudQSim.get_last_meta","text":"Get metadata about the last simulation, such as time spent in network, parsing results, etc.\n\n\n\n\n\n","category":"method"},{"location":"#CloudQSim.split_task-Tuple{CloudQSim.CloudQSimTask, Vector{Int64}}","page":"CloudQSim.jl","title":"CloudQSim.split_task","text":"Split one CloudQSimTask into many for balancing of jobs betwen worker     servers\n\n\n\n\n\n","category":"method"}]
}
